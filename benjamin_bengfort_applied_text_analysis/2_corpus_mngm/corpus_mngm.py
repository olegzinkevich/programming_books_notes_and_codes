#
# #  corpus management
#
# Most nontrivial corpora contain thousands of documents with potentially gigabytes
# of text data. The raw text strings loaded from the documents then need to be preprocessed
# and parsed into a representation suitable for analysis, an additive process
# whose methods may generate or duplicate data, increasing the amount of required
# working memory. From a computational standpoint, this is an important consideration,
# because without some method to stream and select documents from disk, text
# analytics would quickly be bound to the performance of a single machine, limiting
# our ability to generate interesting models. Luckily, tools for streaming accesses of a
# corpus from disk have been well thought out by the NLTK library, which exposes corpora
# in Python via CorpusReader objects.
#
#
# #  hadoop
# Distributed computing frameworks such as Hadoop were created
# in response to the amount of text generated by web crawlers to produce
# search engines
#
# A CorpusReader is a programmatic interface to read, seek, stream, and filter documents,
# and furthermore to expose data wrangling techniques like encoding and preprocessing
# for code that requires access to data within a corpus.
#
# # By default, NLTK CorpusReader objects can even access corpora
# that are compressed as Zip files, and simple extensions allow the
# reading of Gzip or Bzip compression as well.
#
# Streaming Data Access with NLTK
#
# NLTK comes with a variety of corpus readers (66 at the time of this writing)
#
#
# # PlaintextCorpusReader
# A reader for corpora that consist of plain-text documents, where paragraphs are
# assumed to be split using blank lines.
#
# TaggedCorpusReader
# A reader for simple part-of-speech tagged corpora, where sentences are on their
# own line and tokens are delimited with their tag.
#
# BracketParseCorpusReader
# A reader for corpora that consist of parenthesis-delineated parse trees.
#
# ChunkedCorpusReader
# A reader for chunked (and optionally tagged) corpora formatted with
# parentheses.
#
# TwitterCorpusReader
# A reader for corpora that consist of tweets that have been serialized into linedelimited
# JSON.
#
# WordListCorpusReader
# List of words, one per line. Blank lines are ignored.
#
# XMLCorpusReader
# A reader for corpora whose documents are XML files.
#
# CategorizedCorpusReader
# A mixin for corpus readers whose documents are organized by category
#
# # Corpus mpnitoring
#
# As we have established so far in this chapter, applied text analytics requires substantial
# data management and preprocessing. The methods described for data ingestion,
# management, and preprocessing are laborious and time-intensive, but also critical
# precursors to machine learning
#
# # Given the requisite time, energy, and disk storage
# commitments, it is good practice to include with the rest of the data some meta information
# about the details of how the corpus was built.
